{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html"],"names":["routes","path","component","children","AuthRoutingModule","forChild","imports","exports","AuthComponent","selector","styles","template","AuthModule","declarations","LoginComponent","_router","loginInCorrect","createFormControls","createForm","userNameControl","required","passwordControl","signin","userName","password","value","navigate","onClickLogin","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAC,EADP;AAEEC,eAAS,EAAE,6DAFb;AAGEC,cAAQ,EAAC,CACP;AACEF,YAAI,EAAC,OADP;AAEEC,iBAAS,EAAE;AAFb,OADO;AAHX,KADqB,CAAvB;;QAiBaE,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHnB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;0HAAjBI,iB,EAAiB;AAAA;AAAA,kBAFlB,4DAEkB;AAAA,O;AAFN,K;;;;;sEAEXA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERO,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACvB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,a;;;;;uBAAAA,a;AAAa,K;;;YAAbA,a;AAAa,2B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;AAJtB;;;;;;;;;sEAISA,a,EAAa;cATzB,uDASyB;eATf;AACTC,kBAAQ,EAAE,MADD;AAETC,gBAAM,EAAE,CAAC,qCAAD,CAFC;AAITC,kBAAQ;AAJC,S;AASe,Q;;;;;;;;;;;;;;;;;;ACX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAPZ,CACP,4DADO,EAEP,sEAFO,EAGP,0DAHO,EAIP,kEAJO,CAOY;;;;0HAAVA,U,EAAU;AAAA,uBARN,6DAQM,EARS,qEAQT;AARuB,kBAE1C,4DAF0C,EAG1C,sEAH0C,EAI1C,0DAJ0C,EAK1C,kEAL0C;AAQvB,O;AAHA,K;;;;;sEAGVA,U,EAAU;cATtB,sDASsB;eATb;AACRC,sBAAY,EAAE,CAAC,6DAAD,EAAgB,qEAAhB,CADN;AAERP,iBAAO,EAAE,CACP,4DADO,EAEP,sEAFO,EAGP,0DAHO,EAIP,kEAJO;AAFD,S;AASa,Q;;;;;;;;;;;;;;;;;;AClBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBgC;;AAA8C;;AAA8B;;;;QDT/FQ,c;;;AAKX,8BAAoBC,OAApB,EAAqC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADpB,aAAAC,cAAA,GAAuB,KAAvB;AACwC;;;;mCAEhC;AACN,eAAKC,kBAAL;AACA,eAAKC,UAAL;AACD,S,CACC;;;;6CACqB;AAEnB,eAAKC,eAAL,GAAuB,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAC3C,0DAAWC,QADgC,CAAtB,CAAvB,EAGE,KAAKC,eAAL,GAAuB,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAC3C,0DAAWD,QADgC,CAAtB,CAHzB;AAOD,S,CAED;;;;qCACa;AACX,eAAKE,MAAL,GAAc,IAAI,wDAAJ,CAAc;AAC1BC,oBAAQ,EAAE,KAAKJ,eADW;AAE1BK,oBAAQ,EAAE,KAAKH;AAFW,WAAd,CAAd;AAID;;;uCAEW;AACV,cAAG,KAAKF,eAAL,CAAqBM,KAArB,IAA8B,gBAA9B,IAAkD,KAAKJ,eAAL,CAAqBI,KAArB,IAA8B,QAAnF,EAA4F;AAC1F,iBAAKV,OAAL,CAAaW,QAAb,CAAsB,CAAC,aAAD,CAAtB;;AACA,iBAAKV,cAAL,GAAoB,KAApB;AAED,WAJD,MAKI;AACF,iBAAKA,cAAL,GAAoB,IAApB;AACD;AAEF;;;;;;;uBAzCQF,c,EAAc,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,wuB;AAAA;AAAA;ACR3B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAyC;;AAAO;;AAChD;;AACI;;AACI;;AACI;;AAAuB;;AAAI;;AAC3B;;AACJ;;AACA;;AACI;;AAAuB;;AAAQ;;AAC/B;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AAAqD;AAAA,mBAAS,IAAAa,YAAA,EAAT;AAAuB,WAAvB;;AAAwF;;AAAK;;AACtJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAnBwC;;AAAA;;AAUe;;AAAA;;AAEmD;;AAAA;;;;;;;;;sEDX7Fb,c,EAAc;cAL1B,uDAK0B;eALhB;AACTL,kBAAQ,EAAE,WADD;AAETmB,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: AuthComponent,\n    children:[\n      {\n        path:'login',\n        component: LoginComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'auth',\r\n  styles: ['body { background-color: #e1e4e8; }'],\r\n\r\n  template: `\r\n    <router-outlet class=\"body-home\"></router-outlet>\r\n  `,\r\n})\r\n\r\nexport class AuthComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthComponent } from './auth.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  declarations: [AuthComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  signin: FormGroup;\n  userNameControl: FormControl;\n  passwordControl: FormControl;\n  loginInCorrect:boolean=false;\n  constructor(private _router: Router) { }\n\n  ngOnInit(): void {\n    this.createFormControls();\n    this.createForm();\n  }\n    // create form controls that we need to validate with their needed validators\n    createFormControls() {\n\n      this.userNameControl = new FormControl(null, [\n        Validators.required,\n      ]),\n        this.passwordControl = new FormControl(null, [\n          Validators.required,\n        ])\n\n    }\n  \n    // add form controls to form group\n    createForm() {\n      this.signin = new FormGroup({\n        userName: this.userNameControl,\n        password: this.passwordControl\n      });\n    }\n\n    onClickLogin(){\n      if(this.userNameControl.value == 'ForbesLindesay' && this.passwordControl.value == '123456'){\n        this._router.navigate(['/index/home']);\n        this.loginInCorrect=false;\n\n      }\n      else{\n        this.loginInCorrect=true;\n      }\n      \n    }\n  \n}\n","\n<section id=\"cover\" class=\"min-vh-100\">\n    <div id=\"cover-caption\">\n        <div class=\"container\">\n            <div class=\"row text-white\">\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n                    <h1 class=\"display-4 py-2 text-truncate\">Sign In</h1>\n                    <div class=\"px-2\">\n                        <form action=\"\" [formGroup]=\"signin\" class=\"justify-content-center\">\n                            <div class=\"form-group\">\n                                <label class=\"sr-only\">Name</label>\n                                <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  required placeholder=\"Enter your name\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"sr-only\">Password</label>\n                                <input type=\"password\" formControlName=\"password\" class=\"form-control\" required placeholder=\"Enter your password\">\n                            </div>\n                            <div class=\"form-group\">\n                                <p class=\"text-danger\" *ngIf=\"loginInCorrect\">User Name or Pasword Incorrect</p>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary btn-lg\" (click)=\"onClickLogin()\" [disabled]=\"!(userNameControl.value && passwordControl.value)\">Login</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n"]}